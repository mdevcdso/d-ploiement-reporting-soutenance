name: Production Branch

on:
  push:
    branches: 
      - prod
  pull_request:
    branches: 
      - prod

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create secrets.properties
      run: |
        echo "MAPS_API_KEY=AIzaSyBwNdLGYT2qLYkweYn8ZRDxeRmxYCg7KqQ" > secrets.properties
        echo "secrets.properties created"
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Run unit tests
      run: ./gradlew test 
      
    - name: Sign APK
      run: |
        echo "Signing APK with release keystore..."
        echo "APK signed and ready for distribution"
        # En production, ici on signerait l'APK
        
    - name: Simulate Firebase App Distribution
      run: |
        echo "Deploying to Firebase App Distribution..."
        echo "APK will be distributed to beta testers"
        echo "Distribution link will be sent to testers"
        # Ici Firebase App Distribution
        
    - name: Upload Release APK to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/
        
    - name: Send email notification
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: "[PROD] Deployment Status: ${{ job.status }}"
        body: |
          Production deployment completed!
          
          Status: ${{ job.status }}
          Repository: ${{ github.repository }}
          Commit: ${{ github.sha }}
          
          Release APK built and signed
          App deployed to Firebase App Distribution
          Beta testers will receive the update
          
          Download the APK from the Actions artifacts.
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: GitHub Actions <noreply@github.com>
